# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    fastcgi_buffers 8 16k;
    fastcgi_buffer_size 32k;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    # include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        server_name  openetz.org www.openetz.org;
        return 301 https://openetz.org$request_uri;

    }

    server {
        listen       443;
        listen       [::]:443;

        server_name  openetz.org;
        root   /usr/share/nginx/html/wallet;
        index index.html index.htm;
        # letsencrypt生成的文件
        ssl on;
        ssl_certificate /etc/letsencrypt/live/openetz.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/openetz.org/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

        location / {
            root   /usr/share/nginx/html/wallet;
            charset utf-8;
            index index.html index.htm;
        }

        location /airdropapi/ { 
                                              #反向代理，达到前后端分离开发的目的
            proxy_pass http://127.0.0.1:7001/;
	    proxy_redirect     off;
	    proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_max_temp_file_size 0;
            proxy_connect_timeout      90;
            proxy_send_timeout         90;
            proxy_read_timeout         90;
            proxy_buffer_size          4k;
            proxy_buffers              4 32k;
            proxy_busy_buffers_size    64k;
            proxy_temp_file_write_size 64k;
        }

        location /airdorp/ {
           # if ($args ~ code=) {
           #    root /usr/share/nginx/html/airdrop/?$args;                      # 如果地址匹配到code=
           # }
           
            try_files $uri /airdrop/index.html;
            root /usr/share/nginx/html/airdrop;
            #alias /usr/share/nginx/html/airdrop/;
            #expires  30d;
            #autoindex on;                    #开启目录浏览功能；   
            #autoindex_exact_size off;        #关闭详细文件大小统计，让文件大小显示MB，GB单位，默认为b；           
           # autoindex_localtime on;          #开启以服务器本地时区显示文件修改日期
        }
      
        location /app/ {
            root   /usr/share/nginx/html/wallet/;
            expires 30s;
        }
        
    }


# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}
